import { Cell, Avatar } from '@telegram-apps/telegram-ui';

interface UserProfileProps {
  className?: string;
  launchParams: any;
}

export const UserProfile = ({ className, launchParams }: UserProfileProps) => {
  const user = launchParams?.initData?.user;

  if (!user) {
    return (
      <Cell description="–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã">
        –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      </Cell>
    );
  }

  return (
    <div className={className}>
      <div style={{ fontSize: '16px', fontWeight: 'bold', marginBottom: '12px' }}>
        üë§ –ü—Ä–æ—Ñ–∏–ª—å {launchParams.isMock && '(—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)'}
      </div>
      
      <Cell
        before={<Avatar size={48} />}
        subtitle={user.username ? `@${user.username}` : undefined}
        description="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
      >
        {user.first_name} {user.last_name || ''}
      </Cell>
      
      <Cell description="–í–∞—à ID –≤ Telegram">
        {user.id.toString()}
      </Cell>
      
      <Cell description="–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞">
        {user.language_code || '–ù–µ —É–∫–∞–∑–∞–Ω'}
      </Cell>
      
      {user.is_premium && (
        <Cell description="–°—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞">
          ‚òÖ Premium-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        </Cell>
      )}
    </div>
  );
};