import {
  require_jsx_runtime
} from "./chunk-C7YDEIUH.js";
import {
  require_react
} from "./chunk-5ULDFCBR.js";
import {
  __toESM
} from "./chunk-5WRI5ZAA.js";

// node_modules/@swc/helpers/esm/_define_property.js
function _define_property(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else obj[key] = value;
  return obj;
}

// node_modules/@swc/helpers/esm/_object_spread.js
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(
        Object.getOwnPropertySymbols(source).filter(function(sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        })
      );
    }
    ownKeys2.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}

// node_modules/@swc/helpers/esm/_object_spread_props.js
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _object_spread_props(target, source) {
  source = source != null ? source : {};
  if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
  else {
    ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}

// node_modules/@swc/helpers/esm/_object_without_properties_loose.js
function _object_without_properties_loose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}

// node_modules/@swc/helpers/esm/_object_without_properties.js
function _object_without_properties(source, excluded) {
  if (source == null) return {};
  var target = _object_without_properties_loose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}

// node_modules/@telegram-apps/telegram-ui/dist/helpers/classNames.js
function classNames(...args) {
  const result = [];
  args.forEach((item) => {
    if (!item) {
      return;
    }
    switch (typeof item) {
      case "string":
        result.push(item);
        break;
      case "object":
        Object.keys(item).forEach((key) => {
          if (item[key]) {
            result.push(key);
          }
        });
        break;
      default:
        result.push(`${item}`);
    }
  });
  return result.join(" ");
}

// node_modules/@telegram-apps/telegram-ui/dist/helpers/react/node.js
var hasReactNode = (value) => {
  return value !== void 0 && value !== false && value !== null && value !== "";
};
function isPrimitiveReactNode(node) {
  return typeof node === "string" || typeof node === "number";
}

// node_modules/@telegram-apps/telegram-ui/dist/components/Service/Tappable/Tappable.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var import_react6 = __toESM(require_react());

// node_modules/@telegram-apps/telegram-ui/dist/hooks/useAppRootContext.js
var import_react2 = __toESM(require_react());

// node_modules/@telegram-apps/telegram-ui/dist/components/Service/AppRoot/AppRootContext.js
var import_react = __toESM(require_react());
var AppRootContext = (0, import_react.createContext)({
  isRendered: false
});

// node_modules/@telegram-apps/telegram-ui/dist/hooks/useAppRootContext.js
var useAppRootContext = () => {
  const appRootContext = (0, import_react2.useContext)(AppRootContext);
  if (!appRootContext.isRendered) {
    throw new Error("[TGUI] Wrap your app with <AppRoot> component");
  }
  return appRootContext;
};

// node_modules/@telegram-apps/telegram-ui/dist/hooks/usePlatform.js
var usePlatform = () => {
  const context = useAppRootContext();
  return context.platform || "base";
};

// node_modules/@telegram-apps/telegram-ui/dist/components/Service/Tappable/components/Ripple/hooks/useRipple.js
var import_react5 = __toESM(require_react());

// node_modules/@telegram-apps/telegram-ui/dist/hooks/useTimeout.js
var import_react4 = __toESM(require_react());

// node_modules/@telegram-apps/telegram-ui/dist/hooks/useEnhancedEffect.js
var import_react3 = __toESM(require_react());

// node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs
function hasWindow() {
  return typeof window !== "undefined";
}
function getNodeName(node) {
  if (isNode(node)) {
    return (node.nodeName || "").toLowerCase();
  }
  return "#document";
}
function getWindow(node) {
  var _node$ownerDocument;
  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement(node) {
  var _ref;
  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
}
function isNode(value) {
  if (!hasWindow()) {
    return false;
  }
  return value instanceof Node || value instanceof getWindow(value).Node;
}
function isElement(value) {
  if (!hasWindow()) {
    return false;
  }
  return value instanceof Element || value instanceof getWindow(value).Element;
}
function isHTMLElement(value) {
  if (!hasWindow()) {
    return false;
  }
  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;
}
function isShadowRoot(value) {
  if (!hasWindow() || typeof ShadowRoot === "undefined") {
    return false;
  }
  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;
}
var invalidOverflowDisplayValues = /* @__PURE__ */ new Set(["inline", "contents"]);
function isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !invalidOverflowDisplayValues.has(display);
}
var tableElements = /* @__PURE__ */ new Set(["table", "td", "th"]);
function isTableElement(element) {
  return tableElements.has(getNodeName(element));
}
var topLayerSelectors = [":popover-open", ":modal"];
function isTopLayer(element) {
  return topLayerSelectors.some((selector) => {
    try {
      return element.matches(selector);
    } catch (_e) {
      return false;
    }
  });
}
var transformProperties = ["transform", "translate", "scale", "rotate", "perspective"];
var willChangeValues = ["transform", "translate", "scale", "rotate", "perspective", "filter"];
var containValues = ["paint", "layout", "strict", "content"];
function isContainingBlock(elementOrCss) {
  const webkit = isWebKit();
  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;
  return transformProperties.some((value) => css[value] ? css[value] !== "none" : false) || (css.containerType ? css.containerType !== "normal" : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== "none" : false) || !webkit && (css.filter ? css.filter !== "none" : false) || willChangeValues.some((value) => (css.willChange || "").includes(value)) || containValues.some((value) => (css.contain || "").includes(value));
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else if (isTopLayer(currentNode)) {
      return null;
    }
    currentNode = getParentNode(currentNode);
  }
  return null;
}
function isWebKit() {
  if (typeof CSS === "undefined" || !CSS.supports) return false;
  return CSS.supports("-webkit-backdrop-filter", "none");
}
var lastTraversableNodeNames = /* @__PURE__ */ new Set(["html", "body", "#document"]);
function isLastTraversableNode(node) {
  return lastTraversableNodeNames.has(getNodeName(node));
}
function getComputedStyle(element) {
  return getWindow(element).getComputedStyle(element);
}
function getNodeScroll(element) {
  if (isElement(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.scrollX,
    scrollTop: element.scrollY
  };
}
function getParentNode(node) {
  if (getNodeName(node) === "html") {
    return node;
  }
  const result = (
    // Step into the shadow DOM of the parent of a slotted node.
    node.assignedSlot || // DOM Element detected.
    node.parentNode || // ShadowRoot detected.
    isShadowRoot(node) && node.host || // Fallback.
    getDocumentElement(node)
  );
  return isShadowRoot(result) ? result.host : result;
}
function getNearestOverflowAncestor(node) {
  const parentNode = getParentNode(node);
  if (isLastTraversableNode(parentNode)) {
    return node.ownerDocument ? node.ownerDocument.body : node.body;
  }
  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list, traverseIframes) {
  var _node$ownerDocument2;
  if (list === void 0) {
    list = [];
  }
  if (traverseIframes === void 0) {
    traverseIframes = true;
  }
  const scrollableAncestor = getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
  const win = getWindow(scrollableAncestor);
  if (isBody) {
    const frameElement = getFrameElement(win);
    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);
  }
  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
}
function getFrameElement(win) {
  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;
}

// node_modules/@telegram-apps/telegram-ui/dist/helpers/dom.js
var canUseDOM = (() => !!(typeof window !== "undefined" && window.document && window.document.createElement))();
var getHTMLElementByChildren = (children, index) => {
  const foundEl = children[index];
  return isHTMLElement(foundEl) ? foundEl : null;
};
var getHTMLElementSiblingByDirection = (el, direction) => {
  let siblingEl = null;
  switch (direction) {
    case "left":
      siblingEl = el.previousElementSibling;
      break;
    case "right":
      siblingEl = el.nextElementSibling;
      break;
    default:
      return null;
  }
  return isHTMLElement(siblingEl) ? siblingEl : null;
};

// node_modules/@telegram-apps/telegram-ui/dist/hooks/useEnhancedEffect.js
var useEnhancedEffect = canUseDOM ? import_react3.useLayoutEffect : import_react3.useEffect;

// node_modules/@telegram-apps/telegram-ui/dist/hooks/useTimeout.js
var useTimeout = (callbackFunction, duration) => {
  const options = (0, import_react4.useRef)({
    callbackFunction,
    duration
  });
  useEnhancedEffect(() => {
    options.current.callbackFunction = callbackFunction;
    options.current.duration = duration;
  }, [
    callbackFunction,
    duration
  ]);
  const timeout = (0, import_react4.useRef)();
  const clear = (0, import_react4.useCallback)(() => clearTimeout(timeout === null || timeout === void 0 ? void 0 : timeout.current), []);
  const set = (0, import_react4.useCallback)(() => {
    clear();
    timeout.current = setTimeout(options.current.callbackFunction, options.current.duration);
  }, [
    clear
  ]);
  return {
    set,
    clear
  };
};

// node_modules/@telegram-apps/telegram-ui/dist/components/Service/Tappable/components/Ripple/hooks/useRipple.js
var RIPPLE_DELAY = 70;
var WAVE_LIVE = 225;
var useRipple = () => {
  const [clicks, setClicks] = (0, import_react5.useState)([]);
  const pointerDelayTimers = (0, import_react5.useMemo)(() => /* @__PURE__ */ new Map(), []);
  const clearClicks = useTimeout(() => setClicks([]), WAVE_LIVE);
  function addClick(x, y, pointerId) {
    const dateNow = Date.now();
    const filteredClicks = clicks.filter((click) => click.date + WAVE_LIVE > dateNow);
    setClicks([
      ...filteredClicks,
      {
        x,
        y,
        date: dateNow,
        pointerId
      }
    ]);
    clearClicks.set();
    pointerDelayTimers.delete(pointerId);
  }
  const onPointerDown = (e) => {
    const { top, left } = e.currentTarget.getBoundingClientRect();
    const x = e.clientX - (left !== null && left !== void 0 ? left : 0);
    const y = e.clientY - (top !== null && top !== void 0 ? top : 0);
    pointerDelayTimers.set(e.pointerId, setTimeout(() => addClick(x, y, e.pointerId), RIPPLE_DELAY));
  };
  const onPointerCancel = (e) => {
    const timer = pointerDelayTimers.get(e.pointerId);
    clearTimeout(timer);
    pointerDelayTimers.delete(e.pointerId);
  };
  return {
    clicks,
    onPointerDown,
    onPointerCancel
  };
};

// node_modules/@telegram-apps/telegram-ui/dist/components/Service/Tappable/components/Ripple/Ripple.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var Ripple = ({ clicks }) => (0, import_jsx_runtime.jsx)("span", {
  "aria-hidden": true,
  className: "tgui-8071f6e38c77bc0b",
  children: clicks.map((wave) => (0, import_jsx_runtime.jsx)("span", {
    className: "tgui-e156954daf886976",
    style: {
      top: wave.y,
      left: wave.x
    }
  }, wave.date))
});

// node_modules/@telegram-apps/telegram-ui/dist/components/Service/Tappable/Tappable.js
var Tappable = (0, import_react6.forwardRef)((_param, ref) => {
  var { Component = "div", children, className, interactiveAnimation = "background", readOnly } = _param, restProps = _object_without_properties(_param, [
    "Component",
    "children",
    "className",
    "interactiveAnimation",
    "readOnly"
  ]);
  const platform = usePlatform();
  const { clicks, onPointerCancel, onPointerDown } = useRipple();
  const hasRippleEffect = platform === "base" && interactiveAnimation === "background" && !readOnly;
  return (0, import_jsx_runtime2.jsxs)(Component, _object_spread_props(_object_spread({
    ref,
    className: classNames("tgui-b5d680db78c4cc2e", platform === "ios" && "tgui-34eb6f8b96874d40", interactiveAnimation === "opacity" && "tgui-7c5d6c1f6bbe3eaf", className),
    onPointerCancel,
    onPointerDown,
    readOnly
  }, restProps), {
    children: [
      hasRippleEffect && (0, import_jsx_runtime2.jsx)(Ripple, {
        clicks
      }),
      children
    ]
  }));
});

// node_modules/@telegram-apps/telegram-ui/dist/components/Typography/Typography.js
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var import_react7 = __toESM(require_react());
var stylesWeight = {
  "1": "tgui-5c92f90c2701fa17",
  "2": "tgui-809f1f8a3f64154d",
  "3": "tgui-5b8bdfbd2af10f59"
};
var Typography = (0, import_react7.forwardRef)((_param, ref) => {
  var { weight = "3", Component = "span", plain = true, caps, className } = _param, restProps = _object_without_properties(_param, [
    "weight",
    "Component",
    "plain",
    "caps",
    "className"
  ]);
  return (0, import_jsx_runtime3.jsx)(Component, _object_spread({
    ref,
    className: classNames("tgui-c3e2e598bd70eee6", plain && "tgui-080a44e6ac3f4d27", weight && stylesWeight[weight], caps && "tgui-c602097b30e4ede9", className)
  }, restProps));
});

// node_modules/@telegram-apps/telegram-ui/dist/components/Typography/Subheadline/Subheadline.js
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var import_react8 = __toESM(require_react());
var subheadlineLevelStyles = {
  "1": "tgui-30064fce0d501f17",
  "2": "tgui-8f63cd31b2513281"
};
var Subheadline = (0, import_react8.forwardRef)((_param, ref) => {
  var { level = "1", className, Component } = _param, restProps = _object_without_properties(_param, [
    "level",
    "className",
    "Component"
  ]);
  return (0, import_jsx_runtime4.jsx)(Typography, _object_spread_props(_object_spread({}, restProps), {
    ref,
    className: classNames("tgui-266b6ffdbad2b90e", subheadlineLevelStyles[level], className),
    Component: Component || "h6"
  }));
});

export {
  _object_spread,
  _object_spread_props,
  _object_without_properties,
  classNames,
  hasReactNode,
  isPrimitiveReactNode,
  AppRootContext,
  useAppRootContext,
  usePlatform,
  getNodeName,
  getWindow,
  getDocumentElement,
  isElement,
  isHTMLElement,
  isOverflowElement,
  isTableElement,
  isTopLayer,
  isContainingBlock,
  getContainingBlock,
  isWebKit,
  isLastTraversableNode,
  getComputedStyle,
  getNodeScroll,
  getParentNode,
  getOverflowAncestors,
  getFrameElement,
  canUseDOM,
  getHTMLElementByChildren,
  getHTMLElementSiblingByDirection,
  useEnhancedEffect,
  useTimeout,
  Tappable,
  Typography,
  Subheadline
};
//# sourceMappingURL=chunk-M4GNKEL3.js.map
